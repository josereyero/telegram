<?php
/**
 * @file
 * Drupal module: Telegram
 *
 * Experimental development, guess what...
 *
 * By Jose Manuel Guerrero & Jose Reyero
 *
 * http://reyero.net
 * http://jmanuelguerrero.com
 */

use Drupal\telegram\DrupalTelegramStorage;

/**
 * Implements hook_menu().
 */
function telegram_menu() {
   $items['admin/config/telegram'] = array(
     'title' => 'Telegram',
     'access arguments' => array('administer site configuration'),
     'position' => 'right',
     'page callback' => 'system_admin_menu_block_page',
     'access arguments' => array('access administration pages'),
     'file' => 'system.admin.inc',
     'file path' => drupal_get_path('module', 'system'),
   );
   $items['admin/config/telegram/settings'] = array(
     'title' => 'Settings',
     'description' => 'Configure Telegram',
     'page callback' => 'drupal_get_form',
     'page arguments' => array('variable_group_form', 'telegram_settings'),
     'access arguments' => array('administer site configuration'),
   );
   $items['admin/config/telegram/test'] = array(
     'title' => 'Test',
     'description' => 'Test configuration settings',
     'page callback' => 'drupal_get_form',
     'page arguments' => array('telegram_test_form'),
     'access arguments' => array('administer site configuration'),
     'file' => 'telegram.admin.inc',
   );

   return $items;
}

/**
 * Send message to phone number.
 */
function telegram_send_phone($phone, $text) {
  if ($contact = telegram_instance()->getContactByPhone($phone)) {
    return telegram_send_peer($contact->peer, $text);
  }
  else {
    drupal_set_message(t('Cannot find contact for phone @number', array('@number' => $phone)), 'warning');
    return FALSE;
  }
}

/**
 * Send message to peer, shorthand API function.
 *
 * @param string $peer
 *   Peer name.
 * @param string $text
 *   Message text.
 */
function telegram_send_peer($peer, $text) {
  if (telegram_instance()->sendMessage($peer, $text)) {
    drupal_set_message(t('Telegram message sent successfully.'));
    return TRUE;
  }
  else {
    drupal_set_message(t('Error sending Telegram message'));
    return FALSE;
  }
}

/**
 * Get telegram instance.
 *
 * This one will return client or manager depending on the enabled modules.
 *
 * @return Drupal\telegram\TelegramInterface
 */
function telegram_instance() {
  return function_exists('telegram_manager') ? telegram_manager() : telegram_client();
}

/**
 * Get Telegram client
 *
 * @return Drupal\telegram\TelegramClient
 */
function telegram_client() {
  return telegram_service('telegram.client');
}

/**
 * Get Telegram Logger service.
 *
 * @return Psr\Log\LoggerInterface
 */
function telegram_logger() {
  return telegram_service('logger.channel.telegram');
}

/**
 * Get Telegram manager.
 *
 * @return DrupalTelegramStorage
 */
function telegram_storage() {
  return telegram_service('telegram.storage');
}

/**
 * Wrapper around Drupal container services.
 *
 * @param string $name
 */
function telegram_service($name) {
  try {
    return \Drupal::service($name);
  }
  catch (\Exception $e) {
    watchdog_exception('telegram', $e);
  }
}

